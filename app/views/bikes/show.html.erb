<section class="show-bike row span12">
  
  <% if can? :update, bike %>
  <section class="bikesMeta span3">

    <div class="locationWrap">
      <h3>Location</h3>
      <% if bike.departed? %>
        <p>Bike has departed.</p>
      <% else %>
        <% if bike.hook %>
          <p>Bike <%= bike.number %> is on hook: <%= bike.hook.number %>.</p>
          <%= form_for bike.hook_reservation, :method=>:delete do |f| %>
	  <%= label_tag :hook_sig, "Initials" %> 
	  <%= text_field_tag :sig, nil, :id =>"hook_sig" %>
          <%= f.submit I18n.translate('commit_btn.delete_hook_reservation'),  :class => "btn btn-primary", :title=>"Choose Free Hook to remove this bike from its hook" %>
	  <% end %>
	<% else #not bike.hook %>
          <% if Hook.available.count > 0  %>
	   <%= form_tag hook_reservations_path, :metod => :post, :action => :create do %>
	   <%= select_tag(:hook_id, 
	       options_from_collection_for_select(
	       [OpenStruct.new(:number => nil, 
	   :number => I18n.translate('placeholder.hook_options'))]+	       
	       Hook.available.order(:id), :number, :number)) %>
	   <%= hidden_field_tag :bike_id, bike.number %>
	  <%= label_tag :hook_sig, "Initials" %> 
	  <%= text_field_tag :sig, nil, :id => "hook_sig" %>
	   <%= submit_tag I18n.translate('commit_btn.new_hook_reservation'), :class => "btn btn-primary"%>
	   <% end %>
          <% else #no hook %>
           <p>No hooks are available.</p>
	  <% end #hook %>
        <% end #bike.hook %>
      <% end #bike.departed? %>
    </div> <!-- end of location wrapper -->

    <div class="projInfo span2">
      <h3>Assignment</h3>
      <% if bike.application %>
        <p>Assigned to: <%= bike.application.label %></p>
        <div>
          <%= form_for bike.assignment, :method => :delete do |f| %>
	  <%= label_tag :prog_sig, "Initials" %> 
	  <%= text_field_tag :sig, nil, :id => "prog_sig" %>
          <%= f.submit I18n.translate('commit_btn.del_assignment'), :class => "btn btn-danger" %>
          <% end%>
        </div>
      <% end %>
      <% if bike.available? %>
        <p>This bike is available</p>
	<%= form_tag assignments_path, :method => :post do %>
	  <%= hidden_field_tag :bike_id, bike.number %>
	  <%= select_tag(
	      :program_id, 
	      options_from_collection_for_select(
	      [OpenStruct.new(:id => nil, 
	  :label => I18n.translate('placeholder.prog_options'))]+
	      Program.all, :id, :label)) %>
	  <%= label_tag :prog_sig, "Initials" %> 
	  <%= text_field_tag :sig, nil, :id => "prog_sig" %>
	  <%= submit_tag I18n.translate('commit_btn.new_assignment'), :class => "btn btn-primary" %>
	<% end # bike.available? %>
      <% end %>
    </div> <!-- end of proj info wrapper -->

    <div class="departInfo span2">
      <h3>Arrival/Departure</h3>
      <h4>Arrived</h4>
      <p><%= Settings::Date.new(bike.created_at).default_s %></p>
      <h4><%= (bike.departed?)? "Departed" : "Depart Bike" %></h4>
	<% if bike.departed? %>
	<p><%= bike.application.departed_at.strftime("%Y-%m-%d") %></p>	

	<%= form_for bike.application, :method=>:delete do |f| %>
	  <%= label_tag :dep_sig, "Initials" %> 
	  <%= text_field_tag :sig, nil, :id => "dep_sig" %>
	  <%= f.submit I18n.translate('commit_btn.del_departure'), :class=>"btn btn-primary" %>
	<% end %>
	
	<% else %>
	<div>
	<%= form_tag departures_path, :method=>:post do %>
	  <%= hidden_field_tag :bike_id, bike.number %>
	  <% if bike.available? %>
	  <%= select_tag(
	      :destination_id, 
	      options_from_collection_for_select(
	      [OpenStruct.new(:id => nil, 
	  :label => I18n.translate('placeholder.departure_destination'))]+
	  Destination.all, :id, :label)) %>
	  <%= label_tag :value, "Final Value" %> 
	  <%= text_field_tag :value, bike.value %>
	  <% end %>
	  <%= label_tag :dep_sig, "Initials" %> 
	  <%= text_field_tag :sig, nil, :id => "dep_sig" %>
	  <%= submit_tag I18n.translate('commit_btn.new_departure'), :class=>"btn btn-primary" %>
	<% end %>
	</div>
      <% end %>
    </div> <!-- end of depart info wrapper -->
    
    </section> <!-- end of bikes meta -->
  <% end %>

  <div class="span8">

<ul class="nav nav-tabs" id="tab_ui">
  <li class="active"><a href="#bikeInfo" data-toggle="tab">Bike Info</a></li>
  <li><a href="#action_history" data-toggle="tab">History</a></li>
</ul>
<div class="tab-content row span8">
  <section id="bikeInfo" class="tab-pane active noteCard noLeftMarg row span6">
    <div class="block1">
      <h2>
	Bike <%=bike.number %> 
	<%= link_to qr_bike_path(bike) do %><i class="icon-qrcode"></i><% end %> 
      </h2>
      <% if can? :update, bike %>
        <%= link_to(edit_bike_path(bike), :class=> "editLink",   :title => "Edit this bike's information") do %>
	<i class="icon-pencil"></i>Edit Bike
	<% end %>
	<% end %>
    </div>
    <div>
      <dl class="staticAttributes">
	<dd class="key">Manufacturer:</dd><dd class="value" ><%= bike.brand.name if bike.brand %></dd>
	<dd class="key" >Model:</dd><dd class="value"><%= bike.model.name if bike.model %></dd>
	<dd class="key">Color: </dd>
	<dd class="value" >
	  <%= bike.color.name.capitalize %>
	</dd>
	<dd class="value" >
	<span data-bike-color=<%=bike.color.name %> style="background-color:#<%= bike.color.key %>">
	</span>
	</dd>
	<dd class="key">Wheel Size:</dd><dd class="value" ><%= "#{bike.wheel_size} mm" %></dd>
	<dd class="key">Seat tube height:</dd>
	<dd class="value" >
	  <%= render :partial=>'show_measurement', 
	  :locals => {:val => bike.seat_tube_height} %>
	</dd>
	<dd class="key">Top tube length:</dd>
	<dd class="value" >
	  <%= render :partial=>'show_measurement', 
	  :locals => {:val => bike.top_tube_length} %>
	</dd>
    <dd class="key">Quality:</dd><dd class="value attrQuality" ><%= print_val('quality', bike.quality) %></dd>
    <dd class="key">Condition:</dd><dd class="value attrCondition" ><%= print_val('condition', bike.condition) %></dd>

	<dd class="key">Value:</dd><dd class="value" ><%= (bike.value ? print_val('value', bike.value) : "n/a") %></dd>

      </dl>
      <dl class="dynamicAttributes">
	<dd class="key ">Status: </dd> <dd class="value">
	  <% if bike.available? %>
	  Available
	  <% elsif bike.departed? %>
	  Departed as <%= bike.application.method %>
	  <% elsif bike.application %>
	    <%= bike.application.name %>
	  <% end %>
	</dd>

      </dl>
    </div>

  </section>

  <section id="action_history" class="tab-pane noteCard row span6">
    <div class="block1">
      <h2>Action History</h2>
      <ul class="span4">
	<% bike.actions.reverse.each do |a| %>
	<li>
	  <%=  action_summary(a) %>
	  <% unless a.changeset.empty? %>
	  <table class="table table-bordered table-condensed">
	    <thead>
	      <tr>
		<th>Attribute</th>
		<th>Was</th>
		<th>Became</th>
	      </tr>
	    </thead>
	    <tbody>
	      <% a.changeset.
		 delete_if{|k, v| 
		 [:created_at, :updated_at, :id].include? k.to_sym
		 }.each do |key, val|%>
	      <tr>
		<td><%= key.humanize.titleize %></td>
		<td><%= print_val(key,val[0]) || "-" %></td>
		<td><%= print_val(key, val[1]) || "-" %></td>
	      </tr>
	      <% end # .changeset.each %>
	    </tbody>
	  </table>
	  <% end # unless .changeset.empty?%>
	</li>
	<% end # actions.each %>
      </ul>
    </div>
  </section>
</div>


  <section class="notesWrapper">
    <div  class="span8">
      <h3><%= pluralize(bike.comment_threads.length, 'Note') %></h3>
   
      <%= render :partial=>"comments/index", :locals=>{:comments => bike.comment_threads} %> 
      <%= render :partial=>"comments/form",
      :locals=>{:commentable=>programs, :url => new_comment_bike_path(bike)} %>
    </div>
  </section> <!-- end notesWrap -->

</div>


</section> <!-- end of main wrapper -->

<section id="action_history">
  <h2>Action History</h2>
  <ul class="span4">
  <% bike.actions.reverse.each do |a| %>
  <li>
    <!--
    <%  a.action.humanize %> on <% Settings::Date.new(a.created_at).default_s %> by <% (a.user.uname  if a.user) || "unknown user" %> -->
    <%=  action_summary(a) %>
    <% unless a.changeset.empty? %>
    <table class="table table-bordered table-condensed">
      <thead>
	<tr>
	  <th>Attribute</th>
	  <th>Was</th>
	  <th>Became</th>
	</tr>
      </thead>
      <tbody>
      <% a.changeset.
	 delete_if{|k, v| 
	 [:created_at, :updated_at, :id].include? k.to_sym
	 }.each do |key, val|%>
      <tr>
	<td><%= key.humanize.titleize %></td>
	<td><%= print_val(key,val[0]) || "-" %></td>
	<td><%= print_val(key, val[1]) || "-" %></td>
      </tr>
      <% end # .changeset.each %>
      </tbody>
    </table>
  <% end # unless .changeset.empty?%>
  </li>
  <% end # actions.each %>
  </ul>
</section>
